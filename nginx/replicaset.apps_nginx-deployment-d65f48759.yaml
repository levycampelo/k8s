apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    deployment.kubernetes.io/desired-replicas: "3"
    deployment.kubernetes.io/max-replicas: "4"
    deployment.kubernetes.io/revision: "6"
    deployment.kubernetes.io/revision-history: "2"
  creationTimestamp: "2025-01-30T19:34:04Z"
  generation: 11
  labels:
    app: nginx
    pod-template-hash: d65f48759
  name: nginx-deployment-d65f48759
  namespace: nginx
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: Deployment
    name: nginx-deployment
    uid: fa24ca01-6db6-4464-9241-7ccb09e4b2c3
  resourceVersion: "18667"
  uid: 405edfd2-f4fc-44e6-95b1-e93bee2a2c92
spec:
  replicas: 0
  selector:
    matchLabels:
      app: nginx
      pod-template-hash: d65f48759
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx
        pod-template-hash: d65f48759
    spec:
      containers:
      - image: nginx:latest
        imagePullPolicy: Always
        name: nginx
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /dados/website
          name: nginx-storage
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: nginx-storage
        persistentVolumeClaim:
          claimName: nginx-pvc
status:
  observedGeneration: 11
  replicas: 0
